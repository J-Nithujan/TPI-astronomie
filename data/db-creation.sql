-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

DROP TABLE IF EXISTS public.outing_has_celestial_object;
DROP TABLE IF EXISTS public.user_has_outing;
DROP TABLE IF EXISTS public.celestial_objects;
DROP TABLE IF EXISTS public.users;
DROP TABLE IF EXISTS public.outings;
DROP TABLE IF EXISTS public.administrators;
DROP TABLE IF EXISTS public.observation_difficulties;
DROP TABLE IF EXISTS public.types;
DROP TABLE IF EXISTS public.seasons;
DROP TABLE IF EXISTS public.constellations;


CREATE TABLE IF NOT EXISTS public.types
(
    id serial,
    name character varying(30) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_type UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.seasons
(
    id serial,
    name character varying(10) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_season UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.constellations
(
    id serial,
    name character varying(30) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_constellation UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.observation_difficulties
(
    id serial,
    name character varying(15) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_observation_difficulty UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.administrators
(
    id serial,
    email character varying(100) NOT NULL,
    password character varying(64) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_administrator UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.outings
(
    id serial,
    theme character varying(50) NOT NULL,
    meeting_time timestamp(0) without time zone NOT NULL,
    duration time(0) without time zone NOT NULL,
    place character varying(100) NOT NULL,
    equipment text,
    max_people integer NOT NULL,
    remaining_slots integer NOT NULL,
    comment text,
    PRIMARY KEY (id),
    CONSTRAINT unique_outing UNIQUE (theme, meeting_time)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial,
    email character varying(100) NOT NULL,
    firstname character varying(50) NOT NULL,
    lastname character varying(50) NOT NULL,
    age integer NOT NULL,
    phone_number character varying(20) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_user UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.celestial_objects
(
    id serial,
    messier_number character varying(4) NOT NULL,
    ngc_number character varying(10),
    right_ascension time(0) without time zone,
    apparent_magnitude numeric(4, 2),
    size character varying(15),
    distance character varying(10),
    picture character varying(100),
    constellation_id integer NOT NULL,
    observation_difficulty_id integer NOT NULL,
    season_id integer NOT NULL,
    type_id integer NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT unique_celestial_object UNIQUE (messier_number)
);

CREATE TABLE IF NOT EXISTS public.user_has_outing
(
    id serial,
    user_id integer NOT NULL,
    outing_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.outing_has_celestial_object
(
    id serial,
    outing_id integer NOT NULL,
    celestial_object_id integer NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (observation_difficulty_id)
    REFERENCES public.observation_difficulties (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (season_id)
    REFERENCES public.seasons (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (type_id)
    REFERENCES public.types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (constellation_id)
    REFERENCES public.constellations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (constellation_id)
    REFERENCES public.constellations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (observation_difficulty_id)
    REFERENCES public.observation_difficulties (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (season_id)
    REFERENCES public.seasons (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.celestial_objects
    ADD FOREIGN KEY (type_id)
    REFERENCES public.types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_has_outing
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_has_outing
    ADD FOREIGN KEY (outing_id)
    REFERENCES public.outings (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.outing_has_celestial_object
    ADD FOREIGN KEY (outing_id)
    REFERENCES public.outings (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.outing_has_celestial_object
    ADD FOREIGN KEY (celestial_object_id)
    REFERENCES public.celestial_objects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;